{
  "uid" : "99239d3b71801b0e",
  "name" : "test_run[case8]",
  "fullName" : "testcase.Test_excel_case.TestExcel#test_run",
  "historyId" : "42b7021c1aac16c8308dd5da6703ce3a",
  "time" : {
    "start" : 1609725744300,
    "stop" : 1609725744305,
    "duration" : 5
  },
  "status" : "broken",
  "statusMessage" : "json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)",
  "statusTrace" : "self = <testcase.Test_excel_case.TestExcel object at 0x0000005040D18F98>\ncase = {'cookies': '', 'headers': '', '前置条件': '', '备注': '', ...}\n\n    @pytest.mark.parametrize(\"case\", run_list)\n    # 2、修改方法参数\n    def test_run(self,case):\n        # 3、重构函数内容\n        data_key = ExcelConfig.DataConfig\n        # run_list第1个用例，用例key获取values\n        url = ConfigYaml().get_conf_url() + case[data_key.url]\n        print(url)\n        case_id = case[data_key.case_id]\n        case_model = case[data_key.case_model]\n        case_name = case[data_key.case_name]\n        pre_exec = case[data_key.pre_exec]\n        method = case[data_key.method]\n        params_type = case[data_key.params_type]\n        params = case[data_key.params]\n        expect_result = case[data_key.expect_result]\n        headers = case[data_key.headers]\n        cookies = case[data_key.cookies]\n        status_code = case[data_key.status_code]\n        db_verify = case[data_key.db_verify]\n    \n        # 2）.接口请求\n        request = Request()\n        # params 转义json\n        # 验证params有没有内容\n        if len(str(params).strip()) is not 0:\n>           params = json.loads(params)\n\nTest_excel_case.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36\\lib\\json\\__init__.py:354: in loads\n    return _default_decoder.decode(s)\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36\\lib\\json\\decoder.py:339: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x0000005040BD7198>\ns = \"{FormulaName:'@@@',PageSize:10,PageCurrent:1,AnalyzeType:2}\", idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)\n\nC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36\\lib\\json\\decoder.py:355: JSONDecodeError",
  "flaky" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "Test_excel_case"
  }, {
    "name" : "subSuite",
    "value" : "TestExcel"
  }, {
    "name" : "host",
    "value" : "IMSIMS"
  }, {
    "name" : "thread",
    "value" : "12168-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.Test_excel_case"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case",
    "value" : "{'用例ID': 'test009', '模块': '基础公式配置\\n(设备指标类)', '接口名称': '查询无效设备指标类', '请求URL': '/admin/action.ashx?prefix=admin&action=GetMonitorIndexFormulaList', '前置条件': '', '请求类型': 'POST', '请求参数类型': 'JSON', '请求参数': \"{FormulaName:'@@@',PageSize:10,PageCurrent:1,AnalyzeType:2}\", '预期结果': \"Page': {'Current': 1, 'Total': 0}\", '实际结果': '', '是否运行': 'y', 'headers': '', 'cookies': '', '返回状态码': '200', '数据库验证': '', '备注': ''}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "99239d3b71801b0e.json",
  "parameterValues" : [ "{'用例ID': 'test009', '模块': '基础公式配置\\n(设备指标类)', '接口名称': '查询无效设备指标类', '请求URL': '/admin/action.ashx?prefix=admin&action=GetMonitorIndexFormulaList', '前置条件': '', '请求类型': 'POST', '请求参数类型': 'JSON', '请求参数': \"{FormulaName:'@@@',PageSize:10,PageCurrent:1,AnalyzeType:2}\", '预期结果': \"Page': {'Current': 1, 'Total': 0}\", '实际结果': '', '是否运行': 'y', 'headers': '', 'cookies': '', '返回状态码': '200', '数据库验证': '', '备注': ''}" ]
}